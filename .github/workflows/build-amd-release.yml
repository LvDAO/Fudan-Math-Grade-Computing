# 工作流的名称
name: Build and Release Executables (Nuitka-Action)

# 触发工作流的事件
on:
  push:
    tags:
      - 'v*.*.*'

# 设置权限以允许创建 release
permissions:
  contents: write
  packages: write
  actions: read
  security-events: write

# 工作流中包含的任务（Jobs）
jobs:
  build:
    strategy:
      matrix:
        include:
          # Windows 构建
          - os: windows-latest
            platform: windows
            arch: x64
            python-arch: x64
          # macOS 构建
          - os: macos-latest
            platform: macos
            arch: x64
            python-arch: x64
          - os: macos-14  # Apple Silicon (ARM64)
            platform: macos
            arch: arm64
            python-arch: arm64
          # Linux 构建
          - os: ubuntu-latest
            platform: linux
            arch: x64
            python-arch: x64

    runs-on: ${{ matrix.os }}

    # 任务中的步骤（Steps） 
    steps:
      # 第一步：检出（下载）你的代码到虚拟机
      - name: Check-out repository
        uses: actions/checkout@v4

      # 第二步：设置 Python 环境
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: ${{ matrix.python-arch }}
          cache: 'pip'

      - name: Install Dependencies
        run: |
          pip install .
      # 第五步：使用 Nuitka-Action 编译项目
      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: main.py
          mode: onefile
          include-package: polars
          include-module: os,argparse,warnings
          include-package-data: polars
          assume-yes-for-downloads: true
          no-deployment-flag: self-execution

      - name: Rename Executable
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            mv build/main.exe build/calculator-${{ matrix.platform }}-${{ matrix.arch }}.exe
          else
            mv build/main.bin build/calculator-${{ matrix.platform }}-${{ matrix.arch }}.bin
          fi
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          # 构建产物的名称，统一命名以便后续下载
          name: executables
          # 要上传的文件路径
          path: build/calculator-${{ matrix.platform }}-${{ matrix.arch }}*

  release:
    # 'needs' 确保这个 Job 会在 'build_executables' 全部成功后运行
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          name: executables
          path: dist

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          name: "Release ${{ github.ref_name }}"
          tag_name: ${{ github.ref }}
          body: |
            自动发布版本 ${{ github.ref_name }}
            包含以下平台的可执行文件：
            - Windows (x64)
            - macOS (x64)
            - macOS (arm64)
            - Linux (x64)
