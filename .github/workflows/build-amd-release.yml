# 工作流的名称
name: Build and Release Executables (Nuitka-Action)

# 触发工作流的事件
on:
  push:
    tags:
      - 'v*.*.*'

# 设置权限以允许创建 release
permissions:
  contents: write
  packages: write

# 工作流中包含的任务（Jobs）
jobs:
  build-and-release:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    # 任务中的步骤（Steps） 
    steps:
      # 第一步：检出（下载）你的代码到虚拟机
      - name: Check-out repository
        uses: actions/checkout@v4

      # 第二步：设置 Python 环境
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          architecture: 'x64'
          cache: 'pip'

      # 第三步：安装和配置 uv
      - name: Set up uv
        uses: astral-sh/setup-uv@v1
        with:
          version: latest

      # 第四步：安装项目依赖
      - name: Install Dependencies
        run: |
          uv venv
          uv pip install -e .

      # 第五步：使用 Nuitka-Action 编译项目
      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: main.py
          mode: app
          no-deployment-flag: self-execution

      # 第六步：上传构建产物
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*
            build/*.dist/**/*
          include-hidden-files: true

      # 第七步：创建发布（仅限标签推送）
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/*.exe
            build/*.bin
            build/*.app
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN || secrets.GITHUB_TOKEN }}